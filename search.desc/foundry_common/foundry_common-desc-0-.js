searchState.loadedDescShard("foundry_common", 0, "Common utilities for building and using foundry’s tools.\nABI related helper functions.\nCommonly used calculations.\nDisplays warnings on the cli\nCommonly used constants.\nCommonly used contract types and functions.\nCommonly used errors\nHelpers for formatting Ethereum types.\nContains various <code>std::fs</code> wrapper functions that also …\nContains <code>globset::Glob</code> wrapper functions used for …\nRetry utilities.\nSupport for handling/identifying selectors.\nMisc Serde helpers for foundry crates.\nHelpers for printing to output\nterminal utils\nCommonly used traits.\nTemporary utility conversion traits between ethers-rs and …\nDecodes the calldata of the function\nHelper function to coerce a value to a DynSolValue given a …\nGiven a function and a vector of string arguments, it …\nGiven a function and a vector of string arguments, it …\nGiven an event signature string, it tries to parse it as a …\nGiven a function signature string, it tries to parse it as …\nGiven an event without indexed parameters and a rawlog, it …\nReturns the mean of the slice.\nReturns the median of a <em>sorted</em> slice.\nReturns the number expressed as a string in exponential …\nAlchemy free tier cups: …\nArbitrum L1 sender address of the first transaction in …\nMaximum size in bytes (0x6000) that a contract can have.\nThe dev chain-id, inherited from hardhat\nLogged when an error is indicative that the user is trying …\nThe system address, the sender of the first transaction in …\nDefault request timeout for http requests\nThe first four bytes of the call data for a function call …\nTransaction identifier of System transaction types\nReturns whether the sender is a known L2 system sender …\nContainer for commonly used contract data.\nWrapper type that maps an address to a contract identifier …\nContract ABI.\nContract creation code.\nVery simple fuzzy matching of contract bytecode.\nReturns the amount of different bytes between two slices.\nContract runtime code.\nReturns the argument unchanged.\nArtifact/Contract identifier can take the following form: …\nThis returns the <code>file name</code> part, See <code>get_contract_name</code>\nCalls <code>U::from(self)</code>.\nContract name.\n<code>bytecode</code> is unlinked\nProvides additional path context for <code>std::fs::copy</code>.\nProvides additional path context for <code>std::fs::create_dir</code>.\nProvides additional path context for [<code>File::create</code>].\n<code>deployedBytecode</code> is unlinked\nVarious error variants for <code>std::fs</code> operations that serve …\nProvides additional path context for <code>std::fs::File::open</code>.\nProvides additional path context for <code>std::fs::read</code>.\nProvides additional path context for the file whose …\nProvides additional path context for <code>std::fs::read_link</code>.\nProvides additional path context for <code>std::fs::remove_dir</code>.\nProvides additional path context for <code>std::fs::remove_file</code>.\nError when encountering unlinked code\nProvides additional path context for <code>std::fs::write</code>.\nProvides additional path context for the new JSON file.\nErrors that can occur when working with <code>solc</code> artifacts\n<code>bytecode</code> is unlinked\n<code>deployedBytecode</code> is unlinked\nError when encountering unlinked code\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nProvides additional path context for <code>std::fs::copy</code>.\nProvides additional path context for <code>std::fs::create_dir</code>.\nProvides additional path context for [<code>File::create</code>].\nVarious error variants for <code>std::fs</code> operations that serve …\nProvides additional path context for <code>std::fs::File::open</code>.\nProvides additional path context for <code>std::fs::read</code>.\nProvides additional path context for the file whose …\nProvides additional path context for <code>std::fs::read_link</code>.\nProvides additional path context for <code>std::fs::remove_dir</code>.\nProvides additional path context for <code>std::fs::remove_file</code>.\nProvides additional path context for <code>std::fs::write</code>.\nProvides additional path context for the new JSON file.\nReturns the complementary error variant for <code>std::fs::copy</code>.\nReturns the complementary error variant for …\nReturns the complementary error variant for [<code>File::create</code>].\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the complementary error variant for [<code>File::open</code>].\nReturns the complementary error variant for <code>std::fs::read</code>.\nReturns the complementary error variant for …\nReturns the complementary error variant for …\nReturns the complementary error variant for …\nReturns the complementary error variant for <code>std::fs::write</code>.\nFormats a value using a FormatSpec.\n%e format spec\nA format specifier.\n%x format spec\n%i format spec\n%d format spec\n%o format spec\n%s format spec\nHelper trait to format Ethereum types.\nFormats a string using the input values.\nFormats a value using a FormatSpec.\nFormats a U256 number to string, adding an exponential …\nPretty-prints the given value into a string suitable for …\nPretty-prints the given value into a string suitable for …\nPretty-prints a slice of tokens using <code>format_token</code>.\nFormats a U256 number to string, adding an exponential …\nParses string input as Token against the expected ParamType\nReturn a prettified string version of the value\nHelper trait and functions to format Ethereum types.\nFormats a value using a FormatSpec.\n%e format spec\nA format specifier.\n%x format spec\n%i format spec\n%d format spec\n%o format spec\n%s format spec\nFormats a string using the input values.\nFormats a value using a FormatSpec.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWrapper that implements [<code>Display</code>] for a <code>DynSolValue</code>.\n<code>DynSolValue</code> formatter.\nPretty-prints the given value into a string suitable for …\nPretty-prints the given value into a string suitable for …\nPretty-prints a slice of tokens using <code>format_token</code>.\nThe formatter.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRecursively formats a comma-separated list of <code>DynSolValue</code>s.\nCreates a new [<code>Display</code>] wrapper for the given value.\nParses string input as Token against the expected ParamType\nFormats the given values as a tuple.\nRecursively formats a <code>DynSolValue</code>.\nThe value to display.\nVarious numerical ethereum types used for pretty printing\nlength of the name column for pretty formatting …\nHelper trait to format Ethereum types.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn a prettified string version of the value\nContains the error value\nContains the success value\nCanonicalize a path, returning an error if the path does …\nWrapper for <code>std::fs::copy</code>\nWrapper for <code>std::fs::create_dir</code>\nWrapper for <code>std::fs::create_dir_all</code>\nWrapper for <code>File::create</code>.\nReturns all files with the given extension under the <code>root</code> …\nReturns a list of absolute paths to all the json files …\nNormalize a path, removing things like <code>.</code> and <code>..</code>.\nWrapper for <code>std::fs::File::open</code>\nWrapper for <code>std::fs::read</code>.\nReads the JSON file and deserialize it into the provided …\nWrapper for <code>std::fs::read_link</code>.\nWrapper for <code>std::fs::read_to_string</code>.\nWrapper for <code>std::fs::remove_dir</code>\nWrapper for <code>std::fs::remove_dir_all</code>\nWrapper for <code>std::fs::remove_file</code>.\nWrapper for <code>std::fs::write</code>\nWrites the object as a JSON object.\nA <code>globset::Glob</code> that creates its <code>globset::GlobMatcher</code> when …\nReturns the <code>Glob</code> string used to compile this matcher.\nExpand globs with a root path.\nReturns the argument unchanged.\nReturns the <code>globset::Glob</code>.\nCalls <code>U::from(self)</code>.\nTests whether the given path matches this pattern or not.\nThe compiled glob\nCreates a new <code>GlobMatcher</code> from a <code>globset::Glob</code>.\nA type that keeps track of attempts.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Retry</code> instance.\nRuns the given closure in a loop, retrying if it fails up …\nRuns the given async closure in a loop, retrying if it …\nHow many request can time out before we decide this is a …\nThe standard request timeout for API requests\nA client that can request API data from …\nFetches all possible signatures and attempts to abi decode …\nFetches all possible signatures and attempts to abi decode …\nFetches an event signature given the 32 byte topic using …\nFetches an event signature given the 32 byte topic using …\nFetches a function signature given the selector …\nFetches a function signature given the selector using …\nDecodes the given function or event selector using …\nDecodes the given function or event selector using …\nDecodes the given function or event selectors using …\nDecodes the given function or event selectors using …\nPrint info about the functions which were uploaded or …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nuploads selectors to https://api.openchain.xyz using the …\nuploads selectors to https://api.openchain.xyz using the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the connection was marked as spurious\nMax allowed request that can time out\nCreates a new client with default settings\nParses a list of tokens into function, event, and error …\nSends a new post request\nPretty print calldata and if available, fetch possible …\nPretty print calldata and if available, fetch possible …\nMarks the connection as spurious\nWhether the connection is spurious, or API is down\nHow many requests timed out\nA hex U256\nAn integer\nA <code>u64</code> value.\nNative u64\nAn enum that represents either a serde_json::Number …\nHelper type to parse both <code>u64</code> and <code>U256</code>\nHelper type to deserialize sequence of numbers\nSingle parameter sequence (e.g [1])\nA U256 value.\nU256\nDeserializes a number from hex or int\nDeserializes a number from hex or int, but optionally\nDeserializes single integer params: <code>1, [1], [&quot;0x01&quot;]</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDeserializes the input into a U256, accepting both …\nDeserializes the input into an <code>Option&lt;U256&gt;</code>, using …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTries to convert this into a U256].\nError indicating that <code>set_hook</code> was unable to install the …\nonly allow json output\nprint as is\nStores the configured shell for the duration of the program\nAn abstraction around console output that also considers …\nA <code>Write</code>able object, either with or without color support\nHelper trait for custom shell output\nprint nothing\nStreams to <code>stdio</code>\nThe requested verbosity of output.\nA plain write object\nA guarded shell output type\nPrints the given message to the shell\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a new shell that conforms to the specified …\nCreates a new shell instance with default output and the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if json mode\nReturns true if normal verbosity\nReturns true if silent\nReturns a new shell that’ll only emit json\nCreates a new shell that writes to memory\nCreates a new shell instance\nWrapper around stdout/stderr.\nPrints the object to stdout as pretty json\nPrints the given message to the shell\nPrints the object to stdout as json\nPrints the given message to the shell\nInstall the provided shell\nReturns a new shell that won’t emit anything\nReturns the configured verbosity\nHow to emit messages.\nExecutes a closure on the current stderr\nExecutes a closure on the current stderr\nExecutes a closure on the current stderr\nRuns the given closure with the current shell, or default …\nExecutes a closure on the current stdout\nExecutes a closure on the current stdout\nExecutes a closure on the current stdout\nWrite the fragment\nWrite a fragment to stderr\nWrite output to stderr\nWrite a fragment to stdout\nWrite a fragment to stdout\nSome spinners\nHelper type to determine the current tty\nDisplays warnings on the cli\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a new <code>TermSettings</code>, configured from the current …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn extension trait for <code>std::error::Error</code> for ABI encoding.\nTest filter.\nExtension trait for <code>Function</code>.\nABI-encodes the error using <code>Revert(string)</code>.\nReturns whether this function should be executed as fuzz …\nReturns whether this function should be executed as …\nReturns whether this function is a <code>setUp</code> function.\nReturns whether this function is a test.\nReturns whether this function is a test that should fail.\nReturns whether the contract should be included.\nReturns a contract with the given path should be included.\nReturns whether the test should be included.\nThe corresponding Alloy type.\nThe corresponding Ethers type.\nConversion trait to easily convert from Ethers types to …\nConversion trait to easily convert from Alloy types to …\nConverts the Ethers type to the corresponding Alloy type.\nConverts the Alloy type to the corresponding Ethers type.")